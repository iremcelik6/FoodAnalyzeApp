import 'package:flutter/material.dart';
import 'package:analyze_foodapp/login_register_screen.dart'; 
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/services.dart';
import 'firebase_options.dart';
import 'package:analyze_foodapp/home_screen.dart'; // HomeScreen iÃ§in eklendi
import 'package:firebase_auth/firebase_auth.dart';
//import 'package:analyze_foodapp/auth_service.dart';


void main() async  {
 WidgetsFlutterBinding.ensureInitialized();

WidgetsFlutterBinding.ensureInitialized();
await Firebase.initializeApp(
  options: DefaultFirebaseOptions.currentPlatform,
);


// Bu satÄ±r firebase_options.dart dosyasÄ±nÄ± kullanÄ±r
  
  runApp(const MyApp());
}

// *** MyApp SINIFI BURADA BAÅžLIYOR ***
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'GÄ±da AsistanÄ±',
      theme: ThemeData(
        scaffoldBackgroundColor: const Color(0xFFFFF0F3), // Arka plan rengi
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: const Color(0xFF9D8189), // Buton rengi
            foregroundColor: Colors.white, // Buton metin rengi
            padding: const EdgeInsets.symmetric(horizontal: 30, vertical: 15),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(12), // Buton kÃ¶ÅŸe yuvarlaklÄ±ÄŸÄ±
            ),
            textStyle: const TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.bold,
            ),
          ),
        ),
      ),
      home: const WelcomeScreen(), // UygulamanÄ±n baÅŸlangÄ±Ã§ ekranÄ±
      debugShowCheckedModeBanner: false, // Debug bandÄ±nÄ± kapat
    );
  }
}
// *** MyApp SINIFI BURADA BÄ°TÄ°YOR ***


// *** WelcomeScreen SINIFI BURADA BAÅžLIYOR ***
class WelcomeScreen extends StatefulWidget {
  const WelcomeScreen({super.key});

  @override
State<WelcomeScreen> createState() => _WelcomeScreenState();
}  
// *** WelcomeScreen SINIFI BURADA BÄ°TÄ°YOR ***


// _WelcomeScreenState sÄ±nÄ±fÄ±
class _WelcomeScreenState extends State<WelcomeScreen>
    with SingleTickerProviderStateMixin {
  String selectedLanguage = 'tr'; // SeÃ§ili dil

  // Ä°konlar ve animasyon iÃ§in boyutlandÄ±rma sabitleri
  final double iconGap = 30; // Ä°konlar arasÄ± yatay boÅŸluk
  final double iconTopStart = 50.0; // Ä°lk satÄ±rÄ±n ekranÄ±n Ã¼stÃ¼nden baÅŸlangÄ±Ã§ boÅŸluÄŸu
  final double commonIconHeight = 50.0; // TÃ¼m ikonlar iÃ§in sabit yÃ¼kseklik

  // Her ikonun Ã¶zel geniÅŸliÄŸi (ÅŸu an hepsi 50)
  final double breadWidth = 50;
  final double pastaWidth = 50;
  final double salamiWidth = 50;
  final double energyDrinkWidth = 50;
  final double chocolateWidth = 50;
  final double chipsWidth = 50;
  final double milkWidth = 50;
  final double snackWidth = 50;
  final double flourWidth = 50;
  final double iceCreamWidth = 50;

  late final AnimationController _controller; // Animasyon kontrolcÃ¼sÃ¼
  late final Animation<double> _animation; // Animasyon deÄŸeri

  // Ã‡oklu dil iÃ§in metinler
  final Map<String, Map<String, String>> texts = {
    'tr': {
      'continue': 'Devam Et',
      'hello': 'Merhaba',
    },
    'en': {
      'continue': 'Continue',
      'hello': 'Hello',
    },
  };

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      vsync: this,
      duration: const Duration(seconds: 15), // Animasyon sÃ¼resi (15 saniye)
    )..repeat(); // Animasyonu tekrar et

    _animation = Tween<double>(begin: 0, end: 1).animate(_controller);
  }

  @override
  void dispose() {
    _controller.dispose(); // Animasyon kontrolcÃ¼sÃ¼nÃ¼ temizle
    super.dispose();
  }

  // Bir sonraki ekrana geÃ§iÅŸ fonksiyonu
   void goToNextScreen() {
    // KullanÄ±cÄ±nÄ±n oturum durumunu kontrol et
    final user = FirebaseAuth.instance.currentUser;

    if (user != null) {
      // KullanÄ±cÄ± zaten giriÅŸ yapmÄ±ÅŸsa Ana Ekrana yÃ¶nlendir
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (context) => HomeScreen(language: selectedLanguage),
        ),
      );
    } else {
      // KullanÄ±cÄ± giriÅŸ yapmamÄ±ÅŸsa GiriÅŸ/KayÄ±t EkranÄ±na yÃ¶nlendir
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => LoginRegisterScreen(language: selectedLanguage),
        ),
      );
    }
  }
  /*void goToNextScreen() {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => LoginRegisterScreen(language: selectedLanguage),
      ),
    );
  }*/

  // YardÄ±mcÄ± Metot: Ä°kon grubunu bir Row olarak oluÅŸturmak iÃ§in
  Widget _buildIconGroup() {
    return Row(
      mainAxisSize: MainAxisSize.min, // Ä°Ã§eriÄŸi kadar yer kaplar
      children: [
        Image.asset('assets/bread.png', width: breadWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/pasta.png', width: pastaWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/salami.png', width: salamiWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/energy-drink.png', width: energyDrinkWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/chocolate.png', width: chocolateWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/chips.png', width: chipsWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/milk.png', width: milkWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/snack.png', width: snackWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/flour.png', width: flourWidth, height: commonIconHeight, fit: BoxFit.contain),
        SizedBox(width: iconGap),
        Image.asset('assets/ice-cream.png', width: iceCreamWidth, height: commonIconHeight, fit: BoxFit.contain),
      ],
    );
  }

  @override
  Widget build(BuildContext context) {
    // TÃ¼m ikon grubunun toplam yatay geniÅŸliÄŸi
    final double singleGroupWidth = breadWidth + pastaWidth + salamiWidth + energyDrinkWidth + chocolateWidth + chipsWidth + milkWidth + snackWidth + flourWidth + iceCreamWidth + (iconGap * 9);

    final screenHeight = MediaQuery.of(context).size.height; // Ekran yÃ¼ksekliÄŸini al

    List<Widget> animatedIconRows = []; // Animasyonlu ikon satÄ±rlarÄ±nÄ± tutacak liste

    // Her satÄ±rÄ±n toplam dikey yÃ¼ksekliÄŸi (ikon yÃ¼ksekliÄŸi + boÅŸluk)
    final double rowHeight = commonIconHeight + iconGap + 10;

    // EkranÄ± dolduracak kadar ikon satÄ±rÄ± oluÅŸturma dÃ¶ngÃ¼sÃ¼
    for (double currentTop = iconTopStart; currentTop < screenHeight; currentTop += rowHeight) {
      animatedIconRows.add(
        Positioned( // Her satÄ±r iÃ§in dikey konumlandÄ±rma
          top: currentTop,
          // Ä°Ã§erik geniÅŸliÄŸini ve yÃ¼ksekliÄŸini belirlemek iÃ§in SizedBox kullanÄ±ldÄ±
          child: SizedBox(
            width: singleGroupWidth * 2, // Ä°ki ikon grubunu yan yana alacak kadar geniÅŸ
            height: commonIconHeight, // Ä°konlarÄ±n yÃ¼ksekliÄŸi kadar
            child: AnimatedBuilder( // Her satÄ±r kendi yatay animasyonunu yÃ¶netecek
              animation: _animation,
              builder: (context, child) {
                // Animasyon deÄŸerine gÃ¶re mevcut yatay ofseti hesapla
                double currentOffset = singleGroupWidth * _animation.value;

                return Stack( // Ä°ki ikon grubunu bu Stack iÃ§inde konumlandÄ±r
                  clipBehavior: Clip.none, // Ä°Ã§eriklerin kutu dÄ±ÅŸÄ±na taÅŸmasÄ±na izin ver
                  children: [
                    Positioned(
                      left: -currentOffset, // Ä°lk ikon grubu, animasyonla sola kayar
                      child: _buildIconGroup(), // YardÄ±mcÄ± metot Row dÃ¶ndÃ¼rÃ¼r
                    ),
                    Positioned(
                      left: -currentOffset + singleGroupWidth, // Ä°kinci ikon grubu, ilkinin bitiÅŸinden baÅŸlar
                      child: _buildIconGroup(), // YardÄ±mcÄ± metot Row dÃ¶ndÃ¼rÃ¼r
                    ),
                  ],
                );
              },
            ),
          ),
        ),
      );
    }

    return Scaffold(
      body: Stack(
        children: [
          // Arka plan ikonlarÄ± (oluÅŸturulan tÃ¼m satÄ±rlar buraya yayÄ±lÄ±r)
          ...animatedIconRows,

          // Dil seÃ§imi ve buton kÄ±smÄ± (ikonlarÄ±n Ã¼zerinde gÃ¶rÃ¼necek)
          Center(
            child: Column(
              mainAxisSize: MainAxisSize.min, // SÃ¼tunun iÃ§eriÄŸi kadar yer kaplamasÄ±
              children: [
                const SizedBox(height: 100), // Ãœstten boÅŸluk
                Text(
                  texts[selectedLanguage]!['hello']!,
                  style: const TextStyle(
                    fontSize: 60,
                    fontWeight: FontWeight.bold,
                    color: Color(0xFF5D4037), // Metin rengi: Koyu Kahverengi
                  ),
                ),
                const SizedBox(height: 50), // Metin ile Dropdown arasÄ± boÅŸluk
                DropdownButton<String>(
                  value: selectedLanguage,
                  items: const [
                    DropdownMenuItem(value: 'tr', child: Text('TÃ¼rkÃ§e ðŸ‡¹ðŸ‡·')),
                    DropdownMenuItem(value: 'en', child: Text('English ðŸ‡¬ðŸ‡§')),
                  ],
                  onChanged: (value) {
                    setState(() {
                      selectedLanguage = value!;
                    });
                  },
                ),
                const SizedBox(height: 60), // Dropdown ile buton arasÄ± boÅŸluk
                ElevatedButton(
                  onPressed: goToNextScreen,
                  child: Text(texts[selectedLanguage]!['continue']!),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}